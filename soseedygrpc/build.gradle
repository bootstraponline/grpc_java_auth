apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

// note: gRPC Java lite is incompatible with gRPC Java
// https://github.com/google/protobuf/issues/4314
dependencies {
    // https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.grpc%22%20a%3A%22grpc-netty%22
    compile 'io.grpc:grpc-netty:1.12.0'
    compile 'io.grpc:grpc-all:1.12.0'

    // https://mvnrepository.com/artifact/io.netty/netty-tcnative-boringssl-static
    compile 'io.netty:netty-tcnative-boringssl-static:2.0.8.Final'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile "com.google.truth:truth:0.40"
    testCompile "junit:junit:4.12"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"
buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.google.protobuf%22%20a%3A%22protobuf-gradle-plugin%22
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task("fatJar", type: Jar) {
    baseName = "${project.name}-all"
    manifest {
        attributes 'Main-Class': 'com.instructure.dataseeding.OutOfProcessServer'
    }
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// generate protobuf before trying to compile Kotlin
// https://github.com/google/protobuf-gradle-plugin/issues/100
compileKotlin {
    dependsOn {
        project.tasks.findAll {
            it.name.startsWith('generateProto')
        }
    }
}


protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        // https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.google.protobuf%22%20a%3A%22protoc%22
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }

    generatedFilesBaseDir = "$projectDir/src"

    // Configure the codegen plugins
    plugins {
        // Define a plugin with name 'grpc'
        grpc {
            // https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.grpc%22%20a%3A%22protoc-gen-grpc-java%22
            artifact = 'io.grpc:protoc-gen-grpc-java:1.12.0'
        }

        java {
        }
    }

    generateProtoTasks {
        // all() = all proto tasks
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                java {
                    outputSubDir = 'java/'
                }
                // Add grpc output without any option.  grpc must have been defined in the
                // protobuf.plugins block.
                grpc {
                    outputSubDir = 'java/'
                }
            }
        }

    }
}

task customClean {
    doLast {
        delete "${protobuf.generatedFilesBaseDir}/main/java/com/instructure/soseedy/"
    }
}

clean.dependsOn(customClean)
